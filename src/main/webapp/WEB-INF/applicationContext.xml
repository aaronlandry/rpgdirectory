<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd">

    <!-- PERSISTENCE DETAILS -->
    
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="jdbc/GlossaryApplication"/>
    </bean>
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
        <property name="packagesToScan"> <!-- persistence.xml is no longer necessary -->
            <list>
                <value>com.rha.rpg.model</value>
            </list>
        </property>
        <property name="dataSource" ref="dataSource" />         
        <property name="persistenceUnitName" value="com.rha.RPGPU" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter">
                <property name="showSql" value="true"/>
                <property name="generateDdl" value="false"/>
                <property name="databasePlatform" value="org.eclipse.persistence.platform.database.OraclePlatform"/>
            </bean>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect" />
        </property>        
        <property name="jpaPropertyMap">
            <props>
                <prop key="eclipselink.jdbc.batch-writing">JDBC</prop>  <!-- ALLOW BATCH WRITING -->
                <prop key="eclipselink.weaving">static</prop>
            </props>
        </property>
    </bean> 
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean> 
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="52428800"/> <!-- 50 MB -->
    </bean>
     
    <!-- 
    WHY IS THIS HERE?  IF DEFINED IN DISPATCHER-SERVLET, IT IS NOT ACCESSIBLE TO
    CODE EXECUTED BY SPRING BEFORE THE SERVLET IS INVOKED, SUCH AS AUTHENTICATION CODE
    -->
    <tx:annotation-driven transaction-manager="transactionManager" mode="aspectj"/>
    <!--
        Post-processor to perform exception translation on @Repository classes
        (from native exceptions such as JPA PersistenceExceptions to
        Spring's DataAccessException hierarchy).
    -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    <!--
        SUPPORT @Scheduled AND @Async
    -->
    <task:executor id="myExecutor" pool-size="10"/>
    <task:scheduler id="myScheduler" pool-size="10"/>
    <bean id="persistenceExceptionTranslationPostProcessor"
        class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    
    <!-- ENABLE ANNOTATION-BASED WIRING -->
    <context:component-scan base-package="com.rha.rpg" />
    <context:annotation-config />
    <mvc:annotation-driven />
    
    <!-- ENABLE INJECTION INTO MODEL ENTITIES, VIA ASPECTJ LOADTIMEWEAVING -->
    <!--<context:load-time-weaver />-->
    <context:spring-configured/>

    <!-- ENABLE AoP ANNOTATION-BASED CONFIGURATION -->
    <aop:aspectj-autoproxy />
    
    <!-- MORE STUFF TO ENABLE ANNOTATION-BASED WIRING -->
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping"/>
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
    <bean class="org.springframework.beans.factory.aspectj.AnnotationBeanConfigurerAspect"
        factory-method="aspectOf"/>
    <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
    
</beans>
